Class WW2Handler : EventHandler
{
    Override Void WorldThingDied(WorldEvent e) // Credits to jarewill on the ZDoom Forums
	{
		If(e.Thing.bISMONSTER && e.Inflictor && e.Inflictor.DamageType == "Fire")
		{
			If(CVar.FindCVar('Kriegspfad_BBQ').GetBool()) { e.Thing.GiveInventory("FireEffect",1); }
			Else { e.Thing.GiveInventory("FireDeathEffect",1); }
		}
	}
    Override Void WorldThingRevived(WorldEvent e)
	{
		If(e.Thing.bISMONSTER && e.Thing.FindInventory("FireDeathEffect"))	{ e.Thing.TakeInventory("FireDeathEffect",1); }
	}

	Override Void CheckReplacement(ReplaceEvent e)
	{
		class<Actor> cls = e.Replacee;

		If(cls == 'Fist')											e.Replacement = "Knife";
		Else If(cls == 'Chainsaw')									e.Replacement = "Walther";
		Else If(cls == 'Pistol')									e.Replacement = "Luger";
		Else If(cls == 'Shotgun')									e.Replacement = "TrenchGun";
		Else If(cls == 'SuperShotgun')
		{
			/*If(Random[SuperShotgun](0,4) == 4) e.Replacement = 'Kar98k';
			Else*/ e.Replacement = 'BA5';
		}
		Else If(cls == 'Chaingun')
		{
			If(Random[SMG](0,1)) e.Replacement = 'MP40';
			Else e.Replacement = 'STEN';
		}
		Else If(cls == 'RocketLauncher')
		{
			If(Random[Rifle](0,1)) e.Replacement = 'Kar98k';
			Else e.Replacement = 'G43';
		}
		Else If(cls == 'PlasmaRifle')								e.Replacement = "Flammenwerfer";
		Else If(cls == 'BFG9000')									e.Replacement = "UMG43";

		Else If((cls == 'HealthBonus') || (cls == 'ArmorBonus'))	e.Replacement = "BonusSpawner";

		Else If(cls == 'Stimpack')									e.Replacement = "Medium_HealthPack";
		Else If(cls == 'Medikit')									e.Replacement = "Large_HealthPack";

		Else If(cls == 'GreenArmor')								e.Replacement = "ArmoredHelmet";
		Else If(cls == 'BlueArmor')									e.Replacement = "FlakJacket";	

		Else If(cls == 'SoulSphere')
		{
			If(Random[SoulSphere](0,1)) e.Replacement = 'SuppliesCrate'; //ExtraLarge_HealthPack
			Else e.Replacement = 'Health_1938_Latour';
		}
		Else If(cls == 'MegaSphere')
		{
			If(Random[MegaSphere](0,1)) e.Replacement = 'SuppliesCrate'; //ExtraLarge_HealthPack
			Else e.Replacement = 'Health_Upgrade';
		}
		Else If(cls == 'Berserk')									e.Replacement = "Berserk_HealthPack";


		Else If(cls == 'RadSuit')									e.Replacement = "HazmatSuit";
		Else If(cls == 'Infrared')									e.Replacement = "NightVision";
		Else If(cls == 'AllMap')									e.Replacement = "Blueprints";
		Else If(cls == 'InvulnerabilitySphere')						e.Replacement = "Pervitin"; //InvulnSphere
		Else If(cls == 'BlurSphere')								e.Replacement = "InvisSphere";


		Else If(cls == 'Clip')										e.Replacement = 'ClipSpawner';
		Else If(cls == 'ClipBox')
		{
			If(Random[ClipBox](0,1)) e.Replacement = 'Ammo9mm_2';
			Else e.Replacement = 'Ammo9mm_3';
		}
		Else If(cls == 'Shell')
		{
			If(Random[Shell](0,1))	e.Replacement = "Ammo12G_1";
			Else e.Replacement = 'Clip';
		}
		Else If(cls == 'ShellBox')
		{
			If(Random[ShellBox](0,1))	e.Replacement = "Ammo12G_2";
			Else e.Replacement = 'ClipBox';
		}
		Else If(cls == 'RocketAmmo')
		{
			If(Random[RocketAmmo](0,1)) e.Replacement = 'Ammo792M_1';
			Else e.Replacement = 'Clip';
		}
		Else If(cls == 'RocketBox')
		{
			If(Random[RocketBox](0,1)) e.Replacement = 'Ammo792M_2';
			Else e.Replacement = 'ClipBox';
		}
		Else If(cls == 'Cell')
		{
			If(Random[Cell](0,1)) e.Replacement = 'Ammo9362_1';
			Else e.Replacement = 'Clip';
		}
		Else If(cls == 'CellPack')
		{
			If(Random[CellPack](0,1)) e.Replacement = 'AmmoFuel_1';
			Else e.Replacement = 'ClipBox';
		}
		Else If(cls == 'Backpack')									e.Replacement = "MilitaryBackpack";


        String checksum = level.GetChecksum();
        If(level.GetChecksum() == "3ff94e27423f91c1585b3396f0c03459") // doom2.wad MAP31
        {
			If(cls == "HealthBonus") { e.Replacement = "Wolfenstein3D_DogFood"; }
            Else If(cls == "Stimpack") { e.Replacement = "Wolfenstein3D_Meal"; }
			Else If(cls == "Medikit") { e.Replacement = "Wolfenstein3D_FirstAidKit"; }
			Else If(cls == "Berserk") { e.Replacement = "Wolfenstein3D_Serum"; }
			Else If(cls == "BlurSphere") { e.Replacement = "Wolfenstein3D_Aardwolf"; }
        }
		If(level.GetChecksum() == "aa4ca3fc891d13821accabd836e29eb5") // doom2.wad MAP32 
        {
            If(cls == "Medikit") { e.Replacement = "Wolfenstein3D_FirstAidKit"; }
			Else If(cls == "Berserk") { e.Replacement = "Wolfenstein3D_Serum"; }
        }
	}
}

Class FireDeathEffect : Inventory // Credits to jarewill on the ZDoom Forums
{
	uint oldTranslation;

	Override Void AttachToOwner(Actor other)
	{
        oldTranslation = other.Translation;
		Super.AttachToOwner(other);
	}
	Override Void DetachFromOwner()
    {
        Owner.Translation = oldTranslation;
    }

	Override Void DoEffect()
	{
		Super.DoEffect();
		If(Owner && !(Owner is "LostSoul") && !(Owner is "PainElemental") && !(Owner is "CyberDemon") && !(Owner is "SpiderMastermind") && !Owner.FindState("Death.Fire", True) && !Owner.FindState("Burn", True))
		{
			Owner.bFLY = False; Owner.bNOGRAVITY = False; Owner.bNOBLOOD = True; // Set relevant flags so the monster cannot be damaged, can't fly and doesn't spawn blood.
			Owner.Height = Owner.Default.Height; //Reset the height
			Owner.A_SetTranslation("Scorched"); //Set a color translation
		}
	}
}

Class FireEffect : Powerup
{
	Default { Powerup.Duration -10; }

	Override void InitEffect()
	{
		Translation = Owner.Translation;
		Super.InitEffect();
		If(Owner && !(Owner is "LostSoul") && !(Owner is "PainElemental") && !(Owner is "CyberDemon") && !(Owner is "SpiderMastermind") && !Owner.FindState("Death.Fire", True)	&& !Owner.FindState("Burn", True))
		{
			Owner.Speed = Owner.Default.Speed*2;
			Owner.bBRIGHT = True; Owner.bFRIGHTENED = True; Owner.bNOBLOOD = True;
			Owner.A_SetTranslation("Burning");
		}
	}

	Override void DoEffect()
	{
		Super.DoEffect();
		If(Owner && !(Owner is "LostSoul") && !(Owner is "PainElemental") && !(Owner is "CyberDemon") && !(Owner is "SpiderMastermind") && !Owner.FindState("Death.Fire", True) && !Owner.FindState("Burn", True))
		{
			Owner.Height = Owner.Default.Height;
			Owner.DamageType = "Fire";
			If(Owner.FindState("See") && !Owner.InStateSequence(Owner.CurState, Owner.FindState("See"))) { Owner.SetStateLabel("See"); }
			Else If(!Owner.InStateSequence(Owner.CurState, Owner.FindState("See"))) { Owner.SetStateLabel("Spawn"); }
			Owner.A_Explode(20,Int(Owner.Radius*2), XF_NOTMISSILE); //|XF_THRUSTLESS
			Owner.A_SpawnItemEx("GroundFireFlame", frandom(-Owner.Radius, Owner.Radius), frandom(-Owner.Radius, Owner.Radius), frandom(1,Owner.Height));
			If(Level.MapTime&7 == 0 && random(1,3) == 1) { Owner.A_StartSound(Owner.PainSound, CHAN_VOICE); }
		}
	}

	Override void EndEffect()
	{
		Super.EndEffect();
		If(!Owner) { Return; }
		If(Owner && !(Owner is "LostSoul") && !(Owner is "PainElemental") && !(Owner is "CyberDemon") && !(Owner is "SpiderMastermind") && !Owner.FindState("Death.Fire", True)	&& !Owner.FindState("Burn", True))
		{
			Owner.Height = Owner.Default.Height/4;
			Owner.bBRIGHT = False; Owner.bFRIGHTENED = False; Owner.bNOBLOOD = False;
			Owner.SetStateLabel("Death");
			Owner.A_SetTranslation("Scorched");
			Owner.GiveInventory("ReviveCheck",1);
			Owner.FindInventory("ReviveCheck").Translation = Translation;
		}
	}
}

Class ReviveCheck : Inventory
{
    Override void DoEffect()
	{
        Super.DoEffect();
        If(!Owner) { Destroy(); }
        If(Owner.Health>0) { Owner.Translation = Translation; Destroy(); }
    }
}

Class KriegspfadLevelCompatibility : LevelPostProcessor
{
	protected void Apply(Name checksum, String mapname)
	{
		int nhbonus = 0;
		switch(checksum)
		{
		case 'none':
			return;

		// Doom 2 MAP31
		case '3ff94e27423f91c1585b3396f0c03459':
			// remove excess healthbonuses (4 of them)
			for(int i=0; i<GetThingCount(); i++)
			{
				if(GetThingEdNum(i) != 2014) continue;
				if(nhbonus) SetThingEdNum(i,0);
				nhbonus++;
			}
			break;
		}
	}
}
