Class Dynamite_Proj : Actor
{
	Int timer, ticking;
	Default
	{
		+ROLLSPRITE
		+ROLLCENTER
		//+FORCEXYBILLBOARD

		Health 10;
		Damage (1);
		+MISSILE
		+SHOOTABLE
		+NOBLOOD
		+DONTGIB
		+NOICEDEATH
		+NOTAUTOAIMED
		+DONTTHRUST
		DamageFactor "Normal", 2.0;
		DamageFactor "Fire", 2.0;
	}
	Override Void PostBeginPlay()
	{
		Roll = fRandomPick(-90.0, 90.0);
		Super.PostBeginPlay();
	}
	Override Void Tick()
	{
		If(ticking++ == 35)
		{
			A_StartSound("dynamite/bomb_ticker",CHAN_BODY,CHANF_DEFAULT,1);
			ticking = 0;
		}

		Super.Tick();
		If(timer-- == 0) { SetStateLabel("Explode"); }
	}
	Override Bool Used(Actor User)
	{
		If(User && User.Player && timer > 0)
		{
			User.A_SpawnItemEx("AmmoTNT");
			Destroy();
		}
		Return Super.Used(User);
	}
	States
	{
	Spawn:
		/*TNT_ A 9 { A_AlertMonsters(512); AttractMonsters(); }
		TNT_ A 1 { A_AlertMonsters(512); AttractMonsters(); MovingUp(); }*/
		TNT_ A 1;
		Wait;
	Death:
		TNT1 A 0 A_JumpIf(Health > 0, "Spawn");
	Death.Hitscan:
	Death.Melee:
	//Death.Slime:
	Death.Fire:
	Explode:
		//TNT1 A 0 A_JumpIf(GetZAt(24,0) == floorz && GetZAt(-24,0) == floorz && GetZAt(0,24) == floorz && GetZAt(0,-24) == floorz, 2);
		TNT1 A 0
		{
			A_StartSound("dynamite/explode", CHAN_WEAPON);
			A_StartSound("dynamite/explodedistant", CHAN_BODY, CHANF_OVERLAP);
			A_Explode(256, 256, XF_HURTSOURCE, True, 192);
			A_SpawnItemEx("fx_realisticexplosion");
		}
		Stop;
	}
	// Credits to Jekyll Grim Payne aka Agent_Ash
	void AttractMonsters(double dist = 512)
	{
		if(!target)
			return;
		let itr = BlockThingsIterator.Create(self, dist);
		while(itr.next())
		{
			let act = itr.thing;
			if(act && act.bISMONSTER && act.Health > 0 && act.isHostile(target) && (!act.target || act.target != self) && Distance3D(act) <= dist && timer > 0) //
			{
				act.target = self;
				act.bNOTARGETSWITCH = True; //
			}
		}
	}

	void MovingUp()	{ If(FloorZ >= Pos.Z)Vel.Z += FRandom(0,3);	}
}

Class Granate_Thrown_A : Actor
{
	Int timer;
	Default
	{
		+ROLLSPRITE
		+ROLLCENTER
		+FORCEXYBILLBOARD

		Radius 4;
		Height 3;
		Speed 40;
		Damage (1);
		PROJECTILE;
		-NOGRAVITY
		-NOTELEPORT
		+CANBOUNCEWATER
		+BOUNCEONACTORS
		Obituary "%o failed to field %k's fragmenting fastball.";
		BounceType "Doom";
		BounceFactor 0.2;
		WallBounceFactor 0.6;
		BounceSound "grenade/bounce";
		SeeSound "granate/throw";
	}
	Override Void Tick()
	{
		Super.Tick();
		If(timer++ == 70) { SetStateLabel("Explode"); }
	}
	Override Void PostBeginPlay()
	{
		Super.PostBeginPlay();
			Self.bSPRITEFLIP = RandomPick(false, true);
	}
	States
	{
	Spawn:
		SHG[ CDEFGHAB random(2,3);
		Loop;
	Death:
		#### # -1
		{
			If(frame <= 3) { frame = 3; }
			Else { frame = 7; }
			Roll = FRandom(-45, 45);
		}
		Stop;
	Explode:
		TNT1 A 0
		{
			A_StartSound("granate/explode", CHAN_WEAPON);
			A_StartSound("granate/explodedistant", CHAN_BODY, CHANF_OVERLAP);
			A_Explode(128, 128, XF_HURTSOURCE, True, 96);
			A_SpawnItemEx("HalfLife_Explosion_Small");
		}
		Stop;
	}
}

Class Granate_Thrown_B : Granate_Thrown_A
{
	Default
	{
		Speed 20;
	}
	States
	{
	Spawn:
		SHG] CDEFGHAB random(2,3);
		Loop;
	Death:
		#### # -1
		{
			If(frame <= 3) { frame = 3; }
			Else { frame = 7; }
			Roll = FRandom(-45, 45);
		}
		Stop;
	Explode:
		TNT1 A 0
		{
			A_StartSound("granate/explode", CHAN_WEAPON);
			A_StartSound("granate/explodedistant", CHAN_BODY, CHANF_OVERLAP);
			A_Explode(256, 256, XF_HURTSOURCE, True, 192);
			A_SpawnItemEx("HalfLife_Explosion_Medium");
		}
		Stop;
	}
}
