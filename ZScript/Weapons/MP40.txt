Class MP40 : AxisWeapon
{
	Bool MP40Sequence, switchmag;
	Int counter;
	Default
	{
		Weapon.SelectionOrder 700;

		Weapon.AmmoType "MP40Loaded";
		Weapon.AmmoType2 "Ammo9mm";
		Inventory.PickupMessage "You got the Maschinenpistole 40/1!";
		+WEAPON.NOALERT
		Tag "$TAG_WEAPON_MP401";
		Weapon.UpSound "mp40/select";
	}
	Override Void AttachToOwner(Actor other)
	{
		Super.AttachToOwner(other);
		other.A_GiveInventory("MP40Loaded", random(1,64));
	}
   	Override Bool TryPickup(in out Actor toucher)
    {
		If(toucher)
		{
			Let weap = toucher.FindInventory("MP40");
			If(!weap) { Self.AmmoGive2 = 0; }
			Else If(bTOSSED) { Self.AmmoGive2 = random(1,32); }
			Else { Self.AmmoGive2 = random(1,32); }
		}
			Return Super.TryPickup(toucher);
	}
	States
	{
	Spawn:
		WP3P A -1;
		Stop;
	Select:
		WP3G A 1 A_Raise(30);
		Loop;
	Ready:
		WP3G A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		Loop;
	Deselect:
		WP3G A 1 A_Lower(30);
		Loop;

	Fire:
		TNT1 A 0 A_JumpIf(Invoker.counter == 32 && Invoker.switchmag == False, "SwitchMags");
		TNT1 A 0 A_JumpIf(!CountInv("MP40Loaded"), "Reload");
		WP3G B 1
		{
			A_GunFlash();
			A_AlertMonsters();
			A_FireBullets(1.4, 1.4, 1, random(9,14), "BulletPuff_2");
			A_StartSound("mp40/fire", CHAN_WEAPON);
			A_TakeInventory("MP40Loaded",1);
			A_SpawnItemEx("Casing_9MM",12,-20,32,8,random(-2,2),random(0,4),random(-55,-80),SXF_NOCHECKPOSITION);
			Invoker.counter ++;
		}
		#### A 1 A_WeaponOffset(0,38,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(0,44,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(0,40,WOF_INTERPOLATE);
		#### # 0 A_JumpIf(Invoker.MP40Sequence == False, 2);
		#### # 1 { A_WeaponOffset(0,36,WOF_INTERPOLATE); Invoker.MP40Sequence = False; }
		#### # 0 { Invoker.MP40Sequence = True; }
		#### # 0 A_ReFire();
		Goto Ready;
	Flash:
		WP3F A 1 BRIGHT A_Light1;
		Goto LightDone;

	SwitchMags:
		WP3G A 1 { A_WeaponOffset(0,35,WOF_INTERPOLATE); A_StartSound("mp40/reload", CHAN_WEAPON); }
		#### # 1 A_WeaponOffset(-1,38,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-2,44,WOF_INTERPOLATE);
		#### # 11 { A_WeaponOffset(-3,52,WOF_INTERPOLATE); Invoker.counter = 0; Invoker.switchmag = True; }
		#### # 1 A_WeaponOffset(-2,44,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-1,38,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(0,35,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(0,32,WOF_INTERPOLATE);
		Goto Ready;

	Reload:
		TNT1 A 0 A_JumpIfInventory("MP40Loaded", 64, 2);
		TNT1 A 0 A_JumpIf(CountInv("Ammo9mm") > 0 || CountInv("PowerInfiniteAmmo"), "ReloadWork");
		TNT1 A 0;
		Goto Ready;
	ReloadWork:
		WP3G A 1
		{
			A_WeaponOffset(0,35,WOF_INTERPOLATE);
			If(!CountInv("MP40Loaded")) { A_StartSound("mp40/reload", CHAN_WEAPON); }
			Else { A_StartSound("mp40/reload", CHAN_WEAPON); }
		}
		#### # 1 A_WeaponOffset(0,38,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(0,44,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(0,52,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-1,54,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-2,56,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-3,58,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-4,58,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-4,57,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-3,54,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-3,51,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-3,53,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-3,55,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-3,56,WOF_INTERPOLATE);
	ReloadLoop:
		TNT1 A 0
		{
           	While(CountInv("Ammo9mm") > 0 && CountInv("MP40Loaded") < 64 || CountInv("PowerInfiniteAmmo") && CountInv("MP40Loaded") < 64)
			{
				A_TakeInventory("Ammo9mm", 1, TIF_NOTAKEINFINITE);
				A_GiveInventory("MP40Loaded", 1);
			}
		}
		TNT1 A 0 { Invoker.counter = 0; Invoker.switchmag = False; }
	ReloadFinish:
		WP3G A 1 A_WeaponOffset(-3,57,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-3,59,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-3,63,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-3,67,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-3,65,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-3,62,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-3,58,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-3,55,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-2,53,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-2,49,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-2,46,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-2,45,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-1,44,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-1,46,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-1,47,WOF_INTERPOLATE);
		#### # 1 { A_WeaponOffset(0,49,WOF_INTERPOLATE); A_WeaponReady(WRF_NOBOB); }
		#### # 1 { A_WeaponOffset(0,44,WOF_INTERPOLATE); A_WeaponReady(WRF_NOBOB); }
		#### # 1 { A_WeaponOffset(0,38,WOF_INTERPOLATE); A_WeaponReady(WRF_NOBOB); }
		#### # 1 { A_WeaponOffset(0,35,WOF_INTERPOLATE); A_WeaponReady(WRF_NOBOB); }
		#### # 1 { A_WeaponOffset(0,32,WOF_INTERPOLATE); A_WeaponReady(WRF_NOBOB); }
		Goto Ready;
	}
}

Class MP40Loaded : Ammo
{
	Default
	{
		Tag "9 Ã— 19 mm Parabellum";
		+INVENTORY.IGNORESKILL
		Inventory.MaxAmount 64;
		Inventory.Icon "MGUNA0";
	}
}
