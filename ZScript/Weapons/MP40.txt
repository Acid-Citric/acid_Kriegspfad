Class MP40 : AxisWeapon
{
	Bool MP40Sequence, switchmag;
	Default
	{
		Weapon.SelectionOrder 700;

		Weapon.AmmoType "MP40Loaded_1";
		Weapon.AmmoType2 "Ammo9mm";
		Inventory.PickupMessage "You got the MaschinenPistole 40/1!";
		+WEAPON.NOALERT
		Tag "$TAG_WEAPON_MP401";
		Weapon.UpSound "mp40/select";
	}
	Override Void AttachToOwner(Actor other)
	{
		Super.AttachToOwner(other);
		If(bTOSSED) { other.A_GiveInventory("MP40Loaded_1", random(1,32)); other.A_GiveInventory("MP40Loaded_2", random(1,32)); }
		Else { other.A_GiveInventory("MP40Loaded_1", random(1,32)); other.A_GiveInventory("MP40Loaded_2", random(1,32)); }
	}
   	Override Bool TryPickup(in out Actor toucher)
    {
		If(toucher)
		{
			Let weap = toucher.FindInventory("MP40");
			If(!weap) { Self.AmmoGive2 = 0; }
			Else If(bTOSSED || !bTOSSED) { Self.AmmoGive2 = random(1,64); }
		}
			Return Super.TryPickup(toucher);
	}
	States
	{
	Spawn:
		WP3P A -1;
		Stop;
	Select:
		WP3G A 1 A_Raise(12);
		Loop;
	Ready:
		WP3G A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		Loop;
	Deselect:
		WP3G A 1 A_Lower(12);
		Loop;

	Fire:
		TNT1 A 0
		{
			If(Invoker.switchmag == True && !CountInv("MP40Loaded_2") && !CountInv("MP40Loaded_1")) { Return ResolveState("Reload"); }
            Else If(Invoker.switchmag == False && !CountInv("MP40Loaded_1") || Invoker.switchmag == True && !CountInv("MP40Loaded_2") && CountInv("MP40Loaded_1")) { Return ResolveState("SwitchMags"); }

			Return Invoker.ResolveState(null);
		}
		WP3G B 1
		{
			A_GunFlash();
			A_AlertMonsters();
			A_FireBullets(1.4, 1.4, 1, random(9,14), "BulletPuff_2", FBF_NORANDOMPUFFZ);
			A_StartSound("mp40/fire", CHAN_WEAPON);
			
			If(Invoker.switchmag == True) { A_TakeInventory("MP40Loaded_2",1); }
            Else If(Invoker.switchmag == False) { A_TakeInventory("MP40Loaded_1",1); }			
			
			A_FireProjectile("Casing_Spawner_9MM", 0, False, 0, 0, FPF_NOAUTOAIM);
		}
		#### A 1 A_WeaponOffset(0,38,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(0,44,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(0,40,WOF_INTERPOLATE);
		#### # 0 A_JumpIf(Invoker.MP40Sequence == False, 2);
		#### # 1 { A_WeaponOffset(0,36,WOF_INTERPOLATE); Invoker.MP40Sequence = False; }
		#### # 0 { Invoker.MP40Sequence = True; }
		#### # 0 { If(Invoker.switchmag == False && !CountInv("MP40Loaded_2") && !CountInv("MP40Loaded_1")) { Invoker.switchmag = True; } }
		#### # 0 A_ReFire();
		Goto Ready;
	Flash:
		WP3F A 1 BRIGHT A_Light1;
		Goto LightDone;

	AltFire:
		TNT1 A 0;
	SwitchMags:
		TNT1 A 0
		{
			If(Invoker.switchmag == True && CountInv("MP40Loaded_1")) { Return ResolveState("SwitchMags")+1; }

			Return Invoker.ResolveState(null);
		}
		WP3G A 1 { A_WeaponOffset(0,35,WOF_INTERPOLATE); A_StartSound("mp40/magswitch", CHAN_WEAPON); }
		#### # 1 A_WeaponOffset(-1,38,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-2,44,WOF_INTERPOLATE);
		#### # 11
		{
			A_WeaponOffset(-3,52,WOF_INTERPOLATE);
			If(Invoker.switchmag == False) { SetAmmoType1(True, "MP40Loaded_2"); Invoker.switchmag = True; }
			Else { SetAmmoType1(True, "MP40Loaded_1"); Invoker.switchmag = False;  }
		}
		#### # 1 A_WeaponOffset(-2,44,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-1,38,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(0,35,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(0,32,WOF_INTERPOLATE);
		Goto Ready;

	Reload:
		TNT1 A 0 A_JumpIf(CountInv("MP40Loaded_1") == 32 && CountInv("MP40Loaded_2") == 32, 2);
		TNT1 A 0 A_JumpIf(CountInv("Ammo9mm") > 0 || CountInv("PowerInfiniteAmmo"), "ReloadWork");
		TNT1 A 0;
		Goto Ready;
	ReloadWork:
		TNT1 A 0 A_JumpIf(CountInv("Ammo9mm") > 0 || CountInv("PowerInfiniteAmmo"), 1);
        Goto Ready;
		WP3G C 1
		{
			A_WeaponOffset(0,35,WOF_INTERPOLATE);
			A_StartSound("mp40/reload", CHAN_WEAPON);
		}
		#### # 1 A_WeaponOffset(0,38,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(0,44,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(0,52,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-1,54,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-2,56,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-3,58,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-4,58,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-4,57,WOF_INTERPOLATE);
	ReloadMags:
		#### # 1 A_WeaponOffset(-3,54,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-3,51,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-3,53,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-3,55,WOF_INTERPOLATE);
		#### # 10 A_WeaponOffset(-3,56,WOF_INTERPOLATE);
	ReloadLoop:
		#### A 0
		{
			If(CountInv("MP40Loaded_1") == 32)
			{
				While(CountInv("Ammo9mm") > 0 && CountInv("MP40Loaded_2") < 32 || CountInv("PowerInfiniteAmmo") && CountInv("MP40Loaded_2") < 32)
				{
					A_TakeInventory("Ammo9mm", 1, TIF_NOTAKEINFINITE);
					A_GiveInventory("MP40Loaded_2", 1);
				}
			}
			Else
			{
				While(CountInv("Ammo9mm") > 0 && CountInv("MP40Loaded_1") < 32 || CountInv("PowerInfiniteAmmo") && CountInv("MP40Loaded_1") < 32)
				{
					A_TakeInventory("Ammo9mm", 1, TIF_NOTAKEINFINITE);
					A_GiveInventory("MP40Loaded_1", 1);
				}
			}
		}
		#### A 0
		{
			If(CountInv("MP40Loaded_1") == 32 && CountInv("MP40Loaded_2") == 32)	{ return ResolveState("ReloadFinish"); }
			Else If(CountInv("Ammo9mm") < 1 && !CountInv("PowerInfiniteAmmo"))	{ return ResolveState("ReloadFinish"); }
			return ResolveState("ReloadMags");
		}
		Goto ReloadMags;
	ReloadFinish:
		WP3G C 1 { A_WeaponOffset(-3,57,WOF_INTERPOLATE); Invoker.switchmag = False; SetAmmoType1(True, "MP40Loaded_1"); }
		#### C 1 A_WeaponOffset(-3,59,WOF_INTERPOLATE);
		#### C 1 A_WeaponOffset(-3,63,WOF_INTERPOLATE);
		#### C 1 A_WeaponOffset(-3,67,WOF_INTERPOLATE);
		#### C 1 A_WeaponOffset(-3,65,WOF_INTERPOLATE);
		#### C 1 A_WeaponOffset(-3,62,WOF_INTERPOLATE);
		#### C 1 A_WeaponOffset(-3,58,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(-3,55,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(-2,53,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(-2,49,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(-2,46,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(-2,45,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(-1,44,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(-1,46,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(-1,47,WOF_INTERPOLATE);
		#### D 1 { A_WeaponOffset(0,49,WOF_INTERPOLATE); A_WeaponReady(WRF_NOBOB); }
		#### A 1 { A_WeaponOffset(0,44,WOF_INTERPOLATE); A_WeaponReady(WRF_NOBOB); }
		#### A 1 { A_WeaponOffset(0,38,WOF_INTERPOLATE); A_WeaponReady(WRF_NOBOB); }
		#### A 1 { A_WeaponOffset(0,35,WOF_INTERPOLATE); A_WeaponReady(WRF_NOBOB); }
		#### A 1 { A_WeaponOffset(0,32,WOF_INTERPOLATE); A_WeaponReady(WRF_NOBOB); }
		Goto Ready;
	}
}

Class MP40Loaded_1 : Ammo
{
	Default
	{
		+INVENTORY.IGNORESKILL
		Inventory.MaxAmount 32;
	}
}
Class MP40Loaded_2 : Ammo
{
	Default
	{
		+INVENTORY.IGNORESKILL
		Inventory.MaxAmount 32;
	}
}
