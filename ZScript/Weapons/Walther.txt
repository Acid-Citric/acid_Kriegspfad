Class Walther : AxisWeapon
{
	Default
	{
		Weapon.SelectionOrder 2100;

		Weapon.AmmoType "WaltherLoaded";
		Weapon.AmmoType2 "Ammo9mm";
		Inventory.PickupMessage "You got the Walther P38!";
		Tag "$TAG_WEAPON_WALTHERP38";
		Weapon.UpSound "walther/select";
		Weapon.Kickback 60;
		Inventory.Icon "WP8PB0";
	}
	Override Void AttachToOwner(Actor other)
	{
		Super.AttachToOwner(other);
		other.A_GiveInventory("WaltherLoaded", random(1,bTOSSED ? 4 : 8));
	}
   	Override Bool TryPickup(in out Actor toucher)
    {
		If(toucher)
		{
			Let weap = toucher.FindInventory("Walther");
			If(!weap) { Self.AmmoGive2 = 0; }
			Else If(bTOSSED || !bTOSSED) { Self.AmmoGive2 = random(1,8); }
		}
			Return Super.TryPickup(toucher);
	}
	States
	{
	Spawn:
		WP8P B -1;
		Stop;
	Select:
		WP8U A 1 A_Raise(12);
		Loop;
	Ready:
		WP8U A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		Loop;
	Deselect:
		WP8U A 1 A_Lower(12);
		Loop;

	Fire:
		TNT1 A 0 A_JumpIf(!CountInv(Invoker.Ammo1.GetClass()), "Reload");
		WP8U B 1
		{
			A_FireBullets(0.5, 0.5, -1, random(6,18), "BulletPuff_2", FBF_NORANDOMPUFFZ);
			If(GetCVar('Kriegspfad_P38') == 2) { A_StartSound("P38/fire_silenced_3", CHAN_WEAPON, CHANF_DEFAULT, 1.0); }
			Else If(GetCVar('Kriegspfad_P38') == 1) { A_StartSound("P38/fire_silenced_2", CHAN_WEAPON, CHANF_DEFAULT, 1.0); }
			Else { A_StartSound("P38/fire_silenced", CHAN_WEAPON, CHANF_DEFAULT, 1.0); }
			A_AlertMonsters(256);
			A_TakeInventory(Invoker.AmmoType1, 1);

			A_FireProjectile("Casing_Spawner_9MM", 0, False, 1, 1, FPF_NOAUTOAIM);
		}
		#### C 2 A_WeaponOffset(0,36,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(0,41,WOF_INTERPOLATE);
		#### E 1 A_WeaponOffset(0,35,WOF_INTERPOLATE);
		#### F 1 A_WeaponOffset(0,32,WOF_INTERPOLATE);
		#### A 7;
		#### # 0 A_ReFire();
		Goto Ready;
	Reload:
		TNT1 A 0 A_JumpIf(Invoker.Ammo1.Amount == Invoker.Ammo1.MaxAmount, 2);
		TNT1 A 0 A_JumpIf(Invoker.Ammo2.Amount > 0, "ReloadWork");
		TNT1 A 0;
		Goto Ready;
	ReloadWork:
		WP8U G 1
		{
			A_WeaponOffset(0,35,WOF_INTERPOLATE);
			A_StartSound("walther/reload", CHAN_WEAPON);
		}
		#### G 1 A_WeaponOffset(0,38,WOF_INTERPOLATE);
		#### G 1 A_WeaponOffset(0,44,WOF_INTERPOLATE);
		#### E 1 A_WeaponOffset(0,52,WOF_INTERPOLATE);
		#### E 1 A_WeaponOffset(0,62,WOF_INTERPOLATE);
		#### E 1 A_WeaponOffset(0,72,WOF_INTERPOLATE);
		#### E 1 A_WeaponOffset(0,82,WOF_INTERPOLATE);
		TNT1 A 11;
	ReloadLoop:
		TNT1 A 0 A_MagazineReload(Invoker.AmmoType1);
	ReloadFinish:
		WP8U D 1 A_WeaponOffset(0,82,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(0,72,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(0,62,WOF_INTERPOLATE);
		#### A 1 A_WeaponOffset(0,52,WOF_INTERPOLATE);
		#### A 1 A_WeaponOffset(0,44,WOF_INTERPOLATE);
		#### A 1 A_WeaponOffset(0,38,WOF_INTERPOLATE);
		#### A 1 A_WeaponOffset(0,35,WOF_INTERPOLATE);
		#### A 1 A_WeaponOffset(0,32,WOF_INTERPOLATE);
		Goto Ready;
	}
}

Class WaltherLoaded : Ammo
{
	Default
	{
		+INVENTORY.IGNORESKILL
		Inventory.MaxAmount 8;
	}
}
