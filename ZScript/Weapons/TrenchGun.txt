Class TrenchGun : AxisWeapon replaces Shotgun
{
	Bool shotgunreload,	shotgunempty, shotgunlower, slamfire;
	Default
	{
		Weapon.SelectionOrder 400;

		Weapon.AmmoType "TrenchGunLoaded";
		Weapon.AmmoType2 "Ammo12G";
		Inventory.PickupMessage "You got the Winchester Model 1897!";
		+WEAPON.NOAUTOFIRE
		Scale 0.45;
		Tag "M1897 Trench Gun";
		Weapon.UpSound "shotgun/select";
	}
	Override Void AttachToOwner(Actor other)
	{
		Super.AttachToOwner(other);
		other.A_GiveInventory("TrenchGunLoaded", random(1,6));
	}
   	Override Bool TryPickup(in out Actor toucher)  
    {
		If(toucher)
		{
			Let weap = toucher.FindInventory("TrenchGun");
			If(!weap) { Self.AmmoGive2 = 0; }
			Else If(bTOSSED) { Self.AmmoGive2 = random(1,6); }
			Else { Self.AmmoGive2 = random(1,6); }
		}
			Return Super.TryPickup(toucher);
	}
	States
	{
	Spawn:
		WP2P A -1;
		Stop;
	Select:
		WP2E A 0 A_JumpIf(!CountInv("TrenchGunLoaded"), 2);
		WP2G A 0;
		#### A 1 A_Raise(30);
		Loop;
	Ready:
		WP2E A 0 A_JumpIf(!CountInv("TrenchGunLoaded"), 2);
		WP2G A 0;
		#### A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		Loop;
	Deselect:
		TNT1 A 0 { Invoker.shotgunlower = True; }
		TNT1 A 0 A_JumpIf(Invoker.shotgunreload, "ReloadFinish");
		WP2E A 0 A_JumpIf(!CountInv("TrenchGunLoaded"), 2);
		WP2G A 0;
		#### A 0 { Invoker.shotgunreload = False; Invoker.shotgunempty = False; Invoker.shotgunlower = False; }
		#### A 1 A_Lower(30);
		Loop;

	Fire:
		TNT1 A 0 A_JumpIf(!CountInv("TrenchGunLoaded"), "Reload");
		TNT1 A 0 A_JumpIf(Invoker.shotgunreload, "ReloadFinish");
		TNT1 A 0 A_JumpIf(Invoker.slamfire, "SlamFire"); //A_JumpIf(GetCVar('Acid_TrenchGun') == True, "SlamFire");
		WP2G B 2
		{
			A_GunFlash();
			A_AlertMonsters();
			A_FireBullets(2, 2, 10, random(5,15), "BulletPuff_2");
			A_StartSound("trenchgun/fire", CHAN_WEAPON);
			A_TakeInventory("TrenchGunLoaded",1);
		}
		#### B 1 A_WeaponOffset(0,40,WOF_INTERPOLATE);
		#### B 1 A_WeaponOffset(0,36,WOF_INTERPOLATE);
		#### B 1 A_WeaponOffset(0,34,WOF_INTERPOLATE);
		#### B 1 A_WeaponOffset(0,33,WOF_INTERPOLATE);
		WP2E A 7 { A_WeaponOffset(0,32,WOF_INTERPOLATE); A_WeaponReady(WRF_NOFIRE); }
		#### A 1 A_WeaponOffset(-1,33,WOF_INTERPOLATE); 
		WP2G C 1 { A_WeaponOffset(5,34,WOF_INTERPOLATE); A_StartSound("trenchgun/pump",CHAN_WEAPON); }
		#### C 1 A_WeaponOffset(2,36,WOF_INTERPOLATE);
		#### C 1 A_WeaponOffset(-1,38,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(3,35,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(-1,38,WOF_INTERPOLATE);
		#### E 1 A_WeaponOffset(-4,41,WOF_INTERPOLATE);
		#### E 1 { A_WeaponOffset(-4,43,WOF_INTERPOLATE); A_SpawnItemEx("Casing_Shotgun",12,-20,32,8,random(-2,2),random(0,4),random(-55,-80),SXF_NOCHECKPOSITION); }
		#### F 1 A_WeaponOffset(-4,45,WOF_INTERPOLATE);
		#### F 1 A_WeaponOffset(-3,44,WOF_INTERPOLATE);
		#### E 1 A_WeaponOffset(-2,40,WOF_INTERPOLATE);
		#### E 1 A_WeaponOffset(-4,41,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(-1,38,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(-1,37,WOF_INTERPOLATE);
		#### C 1 A_WeaponOffset(1,36,WOF_INTERPOLATE);
		#### C 1 A_WeaponOffset(2,36,WOF_INTERPOLATE);	
		WP2E A 0 A_JumpIf(!CountInv("TrenchGunLoaded"), 2);
		WP2G A 0;
		#### A 1 A_WeaponOffset(5,34,WOF_INTERPOLATE);
		#### A 1 { A_WeaponOffset(0,32,WOF_INTERPOLATE); A_WeaponReady(WRF_NOBOB); }		
		Goto Ready;
	SlamFire:		
		//TNT1 A 0 A_JumpIf(Invoker.shotgunreload, 7);
		WP2G B 2
		{
			A_GunFlash();
			A_AlertMonsters();
			A_FireBullets(2, 2, 7, random(5,15), "BulletPuff_2");
			A_StartSound("trenchgun/fire", CHAN_WEAPON);
			A_TakeInventory("TrenchGunLoaded",1);
		}
		#### B 1 A_WeaponOffset(0,40,WOF_INTERPOLATE);
		#### B 1 A_WeaponOffset(0,36,WOF_INTERPOLATE);
		#### B 1 A_WeaponOffset(0,34,WOF_INTERPOLATE);
		#### B 1 A_WeaponOffset(0,33,WOF_INTERPOLATE);
		#### H 1 { A_WeaponOffset(0,32,WOF_INTERPOLATE); A_WeaponReady(WRF_NOFIRE); }
		#### G 1 { A_WeaponOffset(0,38,WOF_INTERPOLATE); A_StartSound("trenchgun/pump",CHAN_WEAPON); }
		#### # 1 
		{
			A_WeaponOffset(0,35,WOF_INTERPOLATE);
			If(Invoker.shotgunreload == False) { A_SpawnItemEx("Casing_Shotgun",12,-20,32,8,random(-2,2),random(0,4),random(-55,-80),SXF_NOCHECKPOSITION); }
			Else { Invoker.shotgunreload = False; }
		}
		#### # 1 A_WeaponOffset(0,32,WOF_INTERPOLATE);
		WP2E A 0 A_JumpIf(!CountInv("TrenchGunLoaded"), 2);
		WP2G A 0;
		#### A 1 { A_WeaponOffset(0,32,WOF_INTERPOLATE); A_WeaponReady(WRF_NOBOB); }
		#### A 0 A_ReFire;
		Goto Ready;
	Flash:
		WP2F A 3 Bright A_Light1;
		#### B 4 Bright A_Light2;
		Goto LightDone;
	
	AltFire:
		WP2E A 0 A_JumpIf(!CountInv("TrenchGunLoaded"), 2);
		WP2G A 0;
		#### A 5
		{
			If(Invoker.slamfire == True) { Invoker.slamfire = False; A_Log("SlamFire OFF"); }
			Else { Invoker.slamfire = True; A_Log("SlamFire ON"); }
			A_WeaponReady(WRF_NOFIRE);
		}
		Goto Ready;

	Reload:
		TNT1 A 0 A_JumpIfInventory("TrenchGunLoaded", 6, "Ready");
		TNT1 A 0 A_JumpIf(CountInv("TrenchGunLoaded") > 0, "ReloadWork");
		TNT1 A 0 { Invoker.shotgunempty = True; }
	ReloadWork:
		TNT1 A 0 A_JumpIf(CountInv("Ammo12G") > 0 || CountInv("PowerInfiniteAmmo"), 1);
        Goto Ready;
		TNT1 A 0 { Invoker.shotgunreload = True; }
		WP2G C 1 A_WeaponOffset(5,34,WOF_INTERPOLATE);
		#### C 1 A_WeaponOffset(2,36,WOF_INTERPOLATE);
		#### C 1 A_WeaponOffset(-1,38,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(3,35,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(-1,38,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(-4,41,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(-6,46,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(-7,55,WOF_INTERPOLATE);
	ReloadLoop:
		TNT1 A 0 A_JumpIf(CountInv("TrenchGunLoaded") == 6 || CountInv("Ammo12G") < 1 && !CountInv("PowerInfiniteAmmo"), "ReloadFinish");
		WP2G D 1
		{
			A_WeaponOffset(-8,58,WOF_INTERPOLATE);
			A_StartSound("weapons/sshotl",CHAN_WEAPON);
			A_TakeInventory("Ammo12G",1,TIF_NOTAKEINFINITE);
			A_GiveInventory("TrenchGunLoaded",1);
		}
		#### D 1 A_WeaponOffset(-9,64,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(-10,70,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(-10,68,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(-9,66,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(-9,64,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(-9,62,WOF_INTERPOLATE);
		#### D 1 { A_WeaponOffset(-8,61,WOF_INTERPOLATE); A_WeaponReady(WRF_NOBOB); }
		#### D 1 { A_WeaponOffset(-8,60,WOF_INTERPOLATE); A_WeaponReady(WRF_NOBOB); }
		#### D 2 { A_WeaponOffset(-8,59,WOF_INTERPOLATE); A_WeaponReady(WRF_NOBOB); }
		#### D 3 { A_WeaponOffset(-8,58,WOF_INTERPOLATE); A_WeaponReady(WRF_NOBOB); }
		TNT1 A 0 A_JumpIf(CountInv("TrenchGunLoaded") == 6 || CountInv("Ammo12G") < 1 && !CountInv("PowerInfiniteAmmo"), "ReloadFinish");
		Goto ReloadLoop;
	ReloadFinish:
		TNT1 A 0 A_JumpIf(Invoker.shotgunempty == False, "ReloadFinish_2");	
		WP2G D 1 { A_WeaponOffset(3,35,WOF_INTERPOLATE); A_StartSound("trenchgun/pump",CHAN_WEAPON); }
		#### D 1 A_WeaponOffset(-1,38,WOF_INTERPOLATE);
		#### E 1 A_WeaponOffset(-4,41,WOF_INTERPOLATE);
		#### E 1 A_WeaponOffset(-1,33,WOF_INTERPOLATE);
		#### F 1 A_WeaponOffset(-2,37,WOF_INTERPOLATE);
		#### F 1 A_WeaponOffset(-3,43,WOF_INTERPOLATE);
		#### E 1 A_WeaponOffset(-2,40,WOF_INTERPOLATE);
		#### E 1 A_WeaponOffset(-4,41,WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(-1,38,WOF_INTERPOLATE);
	ReloadFinish_2:
		WP2G D 1 A_WeaponOffset(3,35,WOF_INTERPOLATE);
		#### C 1 A_WeaponOffset(-1,38,WOF_INTERPOLATE);
		#### C 1 A_WeaponOffset(2,36,WOF_INTERPOLATE);
		#### C 1 A_WeaponOffset(5,34,WOF_INTERPOLATE);
		#### C 1 { A_WeaponOffset(0,32,WOF_INTERPOLATE); Invoker.shotgunempty = False; Invoker.shotgunreload = False; }
		TNT1 A 0 A_JumpIf(Invoker.shotgunlower, "Deselect");
		Goto Ready;
	}
}

Class TrenchGunLoaded : Ammo
{
	Default
	{
		Tag "12 Gauge";
		+INVENTORY.IGNORESKILL
		Inventory.MaxAmount 6;
		Inventory.Icon "SHOTA0";
	}
}