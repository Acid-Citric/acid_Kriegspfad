mixin Class AmmoPickupMessage
{
	double amountfactor;
	Default
	{
		Scale 0.75;
		Inventory.PickupSound "misc/ammo_pkup";
	}
	Override String PickupMessage()	{ return String.Format("%s (+%d)",GetTag(),Amount); }
}

Class Ammo9mm : Ammo
{
	mixin AmmoPickupMessage;
	Default
	{
		Tag "$TAG_AMMO_9MM_BOX";
		Inventory.Icon "9MM_A0";
		Inventory.MaxAmount 240;
		Ammo.BackpackAmount 8;
		Ammo.BackpackMaxAmount 480;
	}
}

Class Ammo9mm_1 : Ammo9mm replaces Clip
{
	Override Void PostBeginPlay() { Amount = Random[Ammo9mm](4,16); }
	States
	{
	Spawn:
		9MM_ A -1;
		Stop;
	}
}
Class Ammo9mm_2 : Ammo9mm replaces ClipBox
{ 
	Override Void PostBeginPlay() { Amount = Random[Ammo9mm](8,32); }
	States
	{
	Spawn:
		9MM_ B -1;
		Stop;
	}
}

Class Ammo12G : Ammo replaces Shell
{
	Default
	{
		Inventory.Icon "12G_A0";
		Inventory.MaxAmount 60;
		Ammo.BackpackAmount 4;
		Ammo.BackpackMaxAmount 120;
	}
}
Class Ammo12G_1 : Ammo12G replaces Shell
{
	Default	{ Tag "$TAG_AMMO_12GA";	}
	Override String PickupMessage()
	{
		If(Amount == 1) return String.Format("%s (+%d)",GetTag(),Amount);
		Else return String.Format("%ss (+%d)",GetTag(),Amount);	
	}
	Override Void PostBeginPlay()
	{
		// variants
		int dec = Random[Ammo12G](0,3);
		switch(dec)
		{
		case 0:
		default:
			SetState(ResolveState("Spawn"));
			Amount = 4;
			break;
		case 1:
			SetState(ResolveState("Spawn")+1);
			Amount = 3;
			break;
		case 2:
			SetState(ResolveState("Spawn")+2);
			Amount = 2;
			break;
		case 3:
			SetState(ResolveState("Spawn")+3);
			Amount = 1;
			break;
		}
	}
	States
	{
	Spawn:
		12G_ ABCD -1;
		Stop;
	}
}
Class Ammo12G_2 : Ammo12G replaces ShellBox
{
	mixin AmmoPickupMessage;
	Default	{ Tag "$TAG_AMMO_12GA_BOX"; }
	Override Void PostBeginPlay() { Amount = Random[Ammo12G](4,12); }
	States
	{
	Spawn:
		12G_ E -1;
		Stop;
	}
}

Class Ammo792M : Ammo
{
	Default
	{
		Inventory.Icon "792MA0";
		Inventory.MaxAmount 75;
		Ammo.BackpackAmount 5;
		Ammo.BackpackMaxAmount 150;
	}
}
Class Ammo792M_1 : Ammo792M
{
	Default	{ Tag "$TAG_AMMO_792M"; }
	Override String PickupMessage()
	{
		If(Amount == 1) return String.Format("%s (+%d)",GetTag(),Amount);
		Else return String.Format("%ss (+%d)",GetTag(),Amount);	
	}
	Override Void PostBeginPlay()
	{
		// variants
		int dec = Random[Ammo12G](0,4);
		switch(dec)
		{
		case 0:
		default:
			SetState(ResolveState("Spawn"));
			Amount = 5;
			break;
		case 1:
			SetState(ResolveState("Spawn")+1);
			Amount = 4;
			break;
		case 2:
			SetState(ResolveState("Spawn")+2);
			Amount = 3;
			break;
		case 3:
			SetState(ResolveState("Spawn")+3);
			Amount = 2;
			break;
		case 4:
			SetState(ResolveState("Spawn")+4);
			Amount = 1;
			break;
		}
	}
	States
	{
	Spawn:
		792M ABCDE -1;
		Stop;
	}
}
Class Ammo792M_2 : Ammo792M
{
	mixin AmmoPickupMessage;
	Default	{ Tag "$TAG_AMMO_792M_BOX"; }
	Override Void PostBeginPlay() { Amount = Random[Ammo792M](5,20); }
	States
	{
	Spawn:
		792M F -1;
		Stop;
	}
}

Class Ammo93M : Ammo
{
	Default
	{
		Tag "$TAG_AMMO_93M_BOX";
		Inventory.Icon "93M_A0";
		Inventory.MaxAmount 300;
		Ammo.BackpackMaxAmount 600;
	}
}
Class Ammo93M_1 : Ammo93M replaces Cell
{
	mixin AmmoPickupMessage;
	Override Void PostBeginPlay() { Amount = Random[Ammo792M](10,20); }
	States
	{
	Spawn:
		93M_ A -1;
		Stop;
	}
}

Class AmmoFuel : Ammo
{
	Default
	{
		Tag "$TAG_AMMO_FUEL";
		Inventory.Icon "FUELA0";
		// 11.8 Liters
		Inventory.MaxAmount 360;
		Ammo.BackpackMaxAmount 360;
		Scale 1.0;
	}
}
Class AmmoFuel_1 : AmmoFuel replaces CellPack
{
	mixin AmmoPickupMessage;
	Override Void PostBeginPlay() { Amount = Random[AmmoFuel](10,150); }
	States
	{
	Spawn:
		FUEL A -1;
		Stop;
	}
}

Class AmmoRifleGrenade : Ammo
{
	mixin AmmoPickupMessage;
	Default
	{
		Tag "$TAG_AMMO_RIFLEGRENADE";
		Inventory.Icon "R_G_A0";
		Inventory.Amount 1;
		Inventory.MaxAmount 30;
		Ammo.BackpackAmount 1;
		Ammo.BackpackMaxAmount 90;
		Ammo.DropAmount 1;
	}
	States
	{
	Spawn:
		R_G_ A -1;
		Stop;
	}
}

Class AmmoPouches : BackpackItem replaces BackPack
{
	Default	{ Inventory.PickupMessage "$PICKUP_AMMO_POUCHES"; }
	States
	{
	Spawn:
		AMM0 A -1;
		Stop;
	}
}

Class RocketAmmoReplacer : Actor replaces RocketAmmo
{
	Override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		For(int i; i<1; i++)
		{
			A_SpawnItemEx("Ammo792M");
			A_SpawnItemEx("AmmoRifleGrenade",Random(-8,8),Random(-8,8));
		}
	}
}
Class RocketBoxReplacer : Actor replaces RocketBox
{
	Override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		For(int i; i<1; i++) { A_SpawnItemEx("Ammo792M_2"); }
		For(int i; i<3; i++) { A_SpawnItemEx("AmmoRifleGrenade",Random(-8,8),Random(-8,8)); }		
	}
}
