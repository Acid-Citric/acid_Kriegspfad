/*
Class Panzerschokolade : PowerupGiver
{
	Default
	{
		//Scale 0.6;

		+COUNTITEM
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
		+INVENTORY.BIGPOWERUP
		Inventory.MaxAmount 0;
		Powerup.Type "PowerRegeneration";
		Inventory.PickupMessage "$GOTSUPER"; // "Supercharge!"
		//Inventory.PickupSound "powerups/super";
	}
	/*Override Void PostBeginPlay()
	{
		Super.PostBeginPlay();
		frame = random[Panzerschokolade](20,21); //U,V
	}*//*
	States
	{
	Spawn:
		HEAL U -1;
		Stop;
	}
}
*/

Class Berserk_HealthPack : Berserk
{
	Default
	{
		+INVENTORY.FANCYPICKUPSOUND
		+INVENTORY.NOSCREENFLASH
		Inventory.PickupMessage "$PICKUP_HEALTH_BERSERK";
		//Inventory.PickupSound "powerups/berserk";
	}
	Override Bool TryPickup(In Out Actor Toucher)
	{
		Toucher.A_SetBlend("FF0000",0.4,35);
		Return Super.TryPickup(Toucher);
	}
	Override Void PostBeginPlay()
	{
		Super.PostBeginPlay();
		frame = random[Berserk_HealthPack](17,18); //R,S
	}
	States
	{
	Spawn:
		HEAL # -1;
		Stop;
	Pickup:
		TNT1 A 0
		{
			A_GiveInventory("PowerStrength");
			GiveBody(-100);
		}
		Stop;
	}
}

Class Pervitin : PowerupGiver
{
	Default
	{
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
		+INVENTORY.BIGPOWERUP
		Inventory.MaxAmount 0;
		Inventory.PickupMessage "$PICKUP_POWERUP_PERVITIN";
		Inventory.PickupSound "pervitin/use";
		Powerup.Type "PowerDummy";
		XScale 0.6;
	}
	States
	{
	Spawn:
		METH A -1;
		Stop;
	}
}

Class PowerDummy : Powerup
{
	Int Duration;
	Default
	{
		+INVENTORY.NOSCREENBLINK
		Powerup.Duration -3;
	}
	Override Void DoEffect()
	{
		Super.DoEffect();
		
		Duration = EffectTics;
		Duration--;
		If(Duration == 35)
		{
			Owner.A_GiveInventory("PowerUber");
			Owner.A_GiveInventory("PowerUberSpeed");
			Owner.A_GiveInventory("PowerUberDoubleFiringSpeed");
			Owner.A_GiveInventory("PowerUberProtection");
			//Owner.A_GiveInventory("PowerUberSlowMotion");
		}
	}
}

Class PowerUber : Powerup
{
	Int Duration;
	Default
	{
		+INVENTORY.ADDITIVETIME
		Powerup.Duration -30;
	}
	Override Void DoEffect()
	{
		Super.DoEffect();

		Duration = EffectTics;
		Duration--;
		If(Duration == 105 || Duration == 70 || Duration == 35) { Owner.A_StartSound("*regenerate",slot:CHAN_AUTO,flags:CHANF_DEFAULT,attenuation:ATTN_NONE); }
		If(Duration == 0 && Owner.Health > 50) { Owner.A_DamageSelf(50, "None", DMSS_NOPROTECT); }
	}
}
Class PowerUberSpeed : PowerSpeed
{
	Default
	{
		Powerup.Duration -30;
		Speed 1.5;
		PowerSpeed.NoTrail 1;
		+POWERSPEED.NOTRAIL
		+INVENTORY.ADDITIVETIME
		+INVENTORY.NOTELEPORTFREEZE
	}
}
Class PowerUberDoubleFiringSpeed : PowerDoubleFiringSpeed
{
	Default
	{
		+INVENTORY.ADDITIVETIME
		Powerup.Duration -30;
	}
}
Class PowerUberProtection : PowerProtection
{
	Default
	{
		Powerup.Duration -30;

		DamageFactor "Normal", 0.2; // 80% of protection
		DamageFactor "Fire", 0.4; // 60% of protection
		DamageFactor "Ice", 0.4;
		DamageFactor "Slime", 0.3; // 70%
		DamageFactor "Poison", 0.3;
		//DamageFactor "Drowning", 0.0; provided by the ironfeet side.
		DamageFactor "PoisonCloud", 0.3;

		+INVENTORY.ADDITIVETIME
		+NORADIUSDMG
		+DONTRIP
		+NOPAIN
	}
}
Class PowerUberSlowMotion : Powerup
{
	Int Duration;
	Default
	{
		+INVENTORY.ADDITIVETIME
		Powerup.Duration -30;
	}
	Override Void DoEffect()
	{
		Super.DoEffect();

		Duration = EffectTics;
		Duration--;
		If(Duration > 0)
		{
			If(Level.MapTime & 1) { Level.SetFrozen(True); }
			Else { Level.SetFrozen(False); }
		}
	}
}

Class InvisSphere : BlurSphere
{
	Default
	{
		-VISIBILITYPULSE
		-ZDOOMTRANS
		//Alpha 0.5;
		+INVENTORY.FANCYPICKUPSOUND
		+INVENTORY.NOSCREENFLASH
		Inventory.PickupMessage "$GOTINVIS"; // "Partial Invisibility" "Picked up a Ghillie Suit!"
		Inventory.PickupSound "powerups/invis";
	}
	Override Bool TryPickup(In Out Actor Toucher)
	{
		Toucher.A_SetBlend("000000",0.4,35);
		Return Super.TryPickup(Toucher);
	}
	States
	{
	Spawn:
		GHLE A -1;
		Stop;
	}
}

Class NightVision : Infrared // inspired by Wolf's Brigade: Jin-Roh
{
	Default
	{
		+INVENTORY.NOSCREENFLASH
		+INVENTORY.NOSCREENBLINK
		Powerup.Type "PowerTorch";
		Powerup.ColorMap 0.05, 0.0, 0.0, 1.0, 0.1, 0.1;
		Inventory.PickupMessage "$GOTVISOR";
		//Inventory.PickupSound "powerups/visor";
	}
	Override Bool TryPickup(In Out Actor Toucher)
	{
		Toucher.A_SetBlend("FF0000",0.4,35);
		Return Super.TryPickup(Toucher);
	}
	States
	{
	Spawn:
		NVIS A -1 Bright;
		Stop;
	}
}


Class HazmatSuit : Radsuit
{
	Default
	{
		+INVENTORY.NOSCREENFLASH
		+INVENTORY.NOSCREENBLINK
		Powerup.Type "PowerMask";
		Powerup.Color "000000", 0.25;
		Powerup.Mode "Full";
		Inventory.PickupMessage "$GOTSUIT"; // "Picked up a Hazardous Materials Suit!"
		//Inventory.PickupSound "powerups/suit";
	}
	Override Bool TryPickup(In Out Actor Toucher)
	{
		Toucher.A_SetBlend("000000",0.4,35);
		Return Super.TryPickup(Toucher);
	}
	States
	{
	Spawn:
		HZMT A -1;
		Stop;
	}
}

Class Blueprints : Allmap
{
	Default
	{
		+INVENTORY.NOSCREENFLASH
		Inventory.PickupMessage "$GOTMAP";
	}
	States
	{
	Spawn:
		BPNT A -1;
		Stop;
	}
}
