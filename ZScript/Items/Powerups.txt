Class SuperCharge : PowerupGiver
{
	Default
	{
		+FLOATBOB
		FloatBobStrength 0.5;
		+INVENTORY.NOSCREENFLASH
		+COUNTITEM
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
		+INVENTORY.BIGPOWERUP
		Inventory.MaxAmount 0;
		Powerup.Type "PowerRegeneration";
		Inventory.PickupMessage "$GOTSUPER"; // "Supercharge!"
		//Inventory.PickupSound "powerups/soul";
		Translation "0:255=@50[0,128,0]";
	}
	Override Bool TryPickup(In Out Actor Toucher)
	{
		Toucher.A_SetBlend("00FF00",0.4,35);
		Return Super.TryPickup(Toucher);
	}
	States
	{
	Spawn:
		POW0 A 1 NoDelay Bright A_SpawnItemEx("SuperChargeFX", FRandom(-5.0,5.0), FRandom(-5.0,5.0), 20.0+FRandom(-1.0,1.0), 0, 0, FRandom(0.3,0.7), 0, SXF_CLIENTSIDE, 0);
		POW0 A 3 Bright;
		Loop;
	}
}

Class MegaChargeHealth : Health
{
	Default
	{
		Inventory.Amount 200;
		Inventory.MaxAmount 999;
		+INVENTORY.ALWAYSPICKUP
	}
}
Class MegaCharge : Megasphere
{
	Default
	{
		+FLOATBOB
		FloatBobStrength 0.5;
	}
	States
	{
	Pickup:
		TNT1 A 0 A_GiveInventory("FlakJacket", 1);
		TNT1 A 0 A_GiveInventory("MegaChargeHealth", 1);
		Stop;
	}
} 

Class BerserkSphere : Berserk
{
	Default
	{
		+FLOATBOB
		FloatBobStrength 0.5;
		+INVENTORY.FANCYPICKUPSOUND
		+INVENTORY.NOSCREENFLASH
		Inventory.PickupMessage "$GOTBERSERK";
		//Inventory.PickupSound "powerups/berserk";
		Translation "0:255=@50[128,0,0]";
	}
	Override Bool TryPickup(In Out Actor Toucher)
	{
		Toucher.A_SetBlend("FF0000",0.4,35);
		Return Super.TryPickup(Toucher);
	}
	States
	{
	Spawn:
		POW0 A 1 NoDelay Bright A_SpawnItemEx("BerserkSphereFX", FRandom(-5.0,5.0), FRandom(-5.0,5.0), 20.0+FRandom(-1.0,1.0), 0, 0, FRandom(0.3,0.7), 0, SXF_CLIENTSIDE, 0);
		POW0 A 3 Bright;
		Loop;
	}
}

Class InvulnSphere : InvulnerabilitySphere
{
	Default
	{
		+FLOATBOB
		FloatBobStrength 0.5;
		+INVENTORY.FANCYPICKUPSOUND
		+INVENTORY.NOSCREENFLASH
		Powerup.Color "GoldMap";
		Inventory.PickupMessage "$GOTINVUL"; // "Invulnerability!"
		Inventory.PickupSound "powerups/invuln";
		Translation "0:255=@50[255,255,0]";
	}
	Override Bool TryPickup(In Out Actor Toucher)
	{
		Toucher.A_SetBlend("FFFF66",0.4,35);
		Return Super.TryPickup(Toucher);
	}
	States
	{
	Spawn:
		POW0 A 1 NoDelay Bright A_SpawnItemEx("InvulnSphereFX", FRandom(-5.0,5.0), FRandom(-5.0,5.0), 20.0+FRandom(-1.0,1.0), 0, 0, FRandom(0.3,0.7), 0, SXF_CLIENTSIDE, 0);
		POW0 A 3 Bright;
		Loop;
	}
}

Class InvisSphere : BlurSphere
{
	Default
	{
		-VISIBILITYPULSE
		+ZDOOMTRANS

		+FLOATBOB
		FloatBobStrength 0.5;
		+INVENTORY.FANCYPICKUPSOUND
		+INVENTORY.NOSCREENFLASH
		Inventory.PickupMessage "$GOTINVIS"; // "Partial Invisibility"
		Inventory.PickupSound "powerups/invuln";
		Translation "0:255=@50[0,0,128]";
	}
	Override Bool TryPickup(In Out Actor Toucher)
	{
		Toucher.A_SetBlend("0000FF",0.4,35);
		Return Super.TryPickup(Toucher);
	}
	States
	{
	Spawn:
		POW0 A 1 NoDelay Bright A_SpawnItemEx("InvisSphereFX", FRandom(-5.0,5.0), FRandom(-5.0,5.0), 20.0+FRandom(-1.0,1.0), 0, 0, FRandom(0.3,0.7), 0, SXF_CLIENTSIDE, 0);
		POW0 A 3 Bright;
		Loop;
	}
}

Class NightVision : Infrared
{
	Default
	{
		+INVENTORY.NOSCREENFLASH
		Powerup.Type "PowerTorch";
		Powerup.ColorMap 0.05, 0.0, 0.0, 1.0, 0.1, 0.1;
		Inventory.PickupMessage "$GOTVISOR";
		//Inventory.PickupSound "powerups/berserk";
	}
	Override Bool TryPickup(In Out Actor Toucher)
	{
		Toucher.A_SetBlend("FF0000",0.4,35);
		Return Super.TryPickup(Toucher);
	}
	States
	{
	Spawn:
		NVIS A -1 Bright;
		Stop;
	}
}


Class HazmatSuit : Radsuit
{
	Default
	{
		+INVENTORY.NOSCREENFLASH
		Powerup.Type "PowerMask";
		Inventory.PickupMessage "$GOTSUIT";
		//Inventory.PickupSound "powerups/berserk";
	}
	Override Bool TryPickup(In Out Actor Toucher)
	{
		Toucher.A_SetBlend("00FF00",0.4,35);
		Return Super.TryPickup(Toucher);
	}
}

Class Blueprints : Allmap
{
	Default
	{
		+INVENTORY.NOSCREENFLASH
		Inventory.PickupMessage "$GOTMAP";
	}
	States
	{
	Spawn:
		BPNT A -1;
		Loop;
	}
}

Class PowerupFx : Actor
{
	Default
	{
		Renderstyle "Add";
		Alpha 0.8;
		+NOINTERACTION
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			// Credits to Jekyll Grim Payne aka Agent_Ash (Beautiful Doom)
			if (self is "SuperChargeFX") sprite = GetSpriteIndex("POW4");
			else if (self is "BerserkSphereFX") sprite = GetSpriteIndex("POW3");
			else if (self is "InvulnSphereFX") sprite = GetSpriteIndex("POW1");
			else if (self is "InvisSphereFX") sprite = GetSpriteIndex("POW2");
			return ResolveState(null);
		}
	Looping:
		#### A 1 Bright A_FadeOut(0.05);
		Loop;
	LoadSprites: // Used for 'GetSpriteIndex'
		POW1 A 0; POW2 A 0; POW3 A 0; POW4 A 0;
		Stop;
	}
}
Class SuperChargeFX : PowerupFx { Default {} }
Class BerserkSphereFX : PowerupFx { Default {} }
Class InvulnSphereFX : PowerupFx { Default {} }
Class InvisSphereFX :  PowerupFx { Default {} }
