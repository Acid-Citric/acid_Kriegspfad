mixin Class AmmoPickupMessage
{
	Default
	{
		+INVENTORY.IGNORESKILL
		Scale 0.75;
		Inventory.PickupSound "misc/ammo_pkup";
	}
	override String PickupMessage()
	{
		if(Amount == 1) return String.Format("+%d %s",Amount,GetTag());
		else return String.Format("+%d %ss",Amount,GetTag());	
	}
}
Class Ammo9mm : Ammo
{
	mixin AmmoPickupMessage;
	Default
	{
		Tag "$TAG_AMMO_9MM";
		Inventory.Icon "9MM_A0";
		Inventory.MaxAmount 240;
		Ammo.BackpackAmount 8;
		Ammo.BackpackMaxAmount 480;
	}
}

Class Ammo9mm_1 : Ammo9mm
{
	Override Void PostBeginPlay()
	{
		Super.PostBeginPlay();
		bSPRITEFLIP = Random(0,1);
		Amount = Random[Ammo9mm](1,8);
	}
	States
	{
	Spawn:
		9MM_ A -1;
		Stop;
	}
}
Class Ammo9mm_2 : Ammo9mm
{
	Override Void PostBeginPlay()
	{
		Super.PostBeginPlay();
		Amount = Random[Ammo9mm](8,16);
	}
	States
	{
	Spawn:
		9MM_ B -1;
		Stop;
	}
}
Class Ammo9mm_3 : Ammo9mm
{
	Override Void PostBeginPlay()
	{
		Super.PostBeginPlay();
		Amount = Random[Ammo9mm](8,32);
	}
	States
	{
	Spawn:
		9MM_ C -1;
		Stop;
	}
}

Class Ammo12G : Ammo
{
	mixin AmmoPickupMessage;
	Default	
	{
		Tag "$TAG_AMMO_12GA";
		Inventory.Icon "12G_A0";
		Inventory.MaxAmount 60;
		Ammo.BackpackAmount 4;
		Ammo.BackpackMaxAmount 120;
	}
}
Class Ammo12G_1 : Ammo12G
{
	Override Void PostBeginPlay()
	{
		Super.PostBeginPlay();
		bSPRITEFLIP = Random(0,1);
		
		// variants
		int dec = Random[Ammo12G](0,3);
		switch(dec)
		{
		case 0:
		default:
			SetState(ResolveState("Spawn"));
			Amount = 4;
			break;
		case 1:
			SetState(ResolveState("Spawn")+2);
			Amount = 3;
			break;
		case 2:
			SetState(ResolveState("Spawn")+3);
			Amount = 2;
			break;
		case 3:
			SetState(ResolveState("Spawn")+4);
			Amount = 1;
			break;
		}
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay;
		12G_ ABCD -1;
		Stop;
	}
}
Class Ammo12G_2 : Ammo12G
{
	Override Void PostBeginPlay()
	{
		Super.PostBeginPlay();
		Amount = Random[Ammo12G](4,12);
	}
	States
	{
	Spawn:
		12G_ E -1;
		Stop;
	}
}

Class Ammo792M : Ammo
{
	mixin AmmoPickupMessage;
	Default
	{
		Tag "$TAG_AMMO_792M";
		Inventory.Icon "792MA0";
		Inventory.MaxAmount 75;
		Ammo.BackpackAmount 5;
		Ammo.BackpackMaxAmount 150;
	}
}
Class Ammo792M_1 : Ammo792M
{
	Default	{ XScale 1.0; }
	Override Void PostBeginPlay()
	{
		super.PostBeginPlay();
		bSPRITEFLIP = Random(0,1);
		// variants
		int dec = Random[Ammo12G](0,4);
		switch(dec)
		{
		case 0:
		default:
			SetState(ResolveState("Spawn"));
			Amount = 5;
			break;
		case 1:
			SetState(ResolveState("Spawn")+2);
			Amount = 4;
			break;
		case 2:
			SetState(ResolveState("Spawn")+3);
			Amount = 3;
			break;
		case 3:
			SetState(ResolveState("Spawn")+4);
			Amount = 2;
			break;
		case 4:
			SetState(ResolveState("Spawn")+5);
			Amount = 1;
			break;
		}
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay;
		792M ABCDE -1;
		Stop;
	}
}
Class Ammo792M_2 : Ammo792M
{
	Default	{ Scale 1.0; }
	Override Void PostBeginPlay()
	{
		Super.PostBeginPlay();
		Amount = Random[Ammo792M](5,15);
	}
	States
	{
	Spawn:
		792M F -1;
		Stop;
	}
}

Class Ammo127M : Ammo
{
	mixin AmmoPickupMessage;
	Default
	{
		Tag "$TAG_AMMO_127M";
		Inventory.Icon "127MA0";
		Inventory.MaxAmount 500;
		Ammo.BackpackMaxAmount 1000;
	}
}
Class Ammo127M_1 : Ammo127M replaces Cell
{
	Override Void PostBeginPlay()
	{
		Super.PostBeginPlay();
		Amount = Random[Ammo127M](10,50);
	}
	States
	{
	Spawn:
		127M A -1;
		Stop;
	}
}

Class AmmoFuel : Ammo
{
	mixin AmmoPickupMessage;
	Default
	{
		Tag "$TAG_AMMO_FUEL";
		Inventory.Icon "FUELA0";
		Inventory.MaxAmount 150;
		Ammo.BackpackMaxAmount 150;
		Scale 1.0;
	}
}
Class AmmoFuel_1 : AmmoFuel
{
	Override Void PostBeginPlay()
	{
		Super.PostBeginPlay();
		Amount = Random[AmmoFuel](10,50);
	}
	States
	{
	Spawn:
		FUEL A -1;
		Stop;
	}
}

Class AmmoRifleGrenade : Ammo
{
	mixin AmmoPickupMessage;
	Default
	{
		Tag "$TAG_AMMO_RIFLEGRENADE";
		Inventory.Icon "R_G_A0";
		Inventory.Amount 1;
		Inventory.MaxAmount 10;
		Ammo.BackpackAmount 1;
		Ammo.BackpackMaxAmount 15;
		Ammo.DropAmount 1;
	}
	Override Void PostBeginPlay()
	{
		Super.PostBeginPlay();
		bSPRITEFLIP = Random(0,1);
		SetState(ResolveState("Spawn")+Random[AmmoRifleGrenade](1,2));
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay;
		R_G_ AB -1;
		Stop;
	}
}

Class AmmoTNT : Ammo
{
	mixin AmmoPickupMessage;
	int counter;
	Default
	{
		Tag "$TAG_AMMO_TNT";
		Inventory.Icon "TNT_A0";
		Inventory.Amount 1;
		Inventory.MaxAmount 5;
		Ammo.BackpackAmount 0;
		Ammo.BackpackMaxAmount 5;
		Ammo.DropAmount 1;
		Scale 1.0;
	}
	Override Void PostBeginPlay()
	{
		counter = 5;
		Super.PostBeginPlay();
	}
    Override void DoEffect()
    {
        Super.DoEffect();
        If(Owner is "PlayerPawn" && Owner.GetPlayerInput(MODINPUT_BUTTONS) & BT_USER2)
		{
			If(counter == 45) { counter = 5; }
			Else { counter += 5; }
		}
    }
	Override Bool Use(bool pickup)
	{
		If(Owner && Self.Amount > 0)
		{
			If(counter == 45) { Owner.A_SpawnProjectile("Dynamite_Thrown_45",32,0,0,CMF_AIMDIRECTION,Owner.Pitch-16.0); }
			Else If(counter == 40) { Owner.A_SpawnProjectile("Dynamite_Thrown_40",32,0,0,CMF_AIMDIRECTION,Owner.Pitch-16.0); }
			Else If(counter == 35) { Owner.A_SpawnProjectile("Dynamite_Thrown_35",32,0,0,CMF_AIMDIRECTION,Owner.Pitch-16.0); }
			Else If(counter == 30) { Owner.A_SpawnProjectile("Dynamite_Thrown_30",32,0,0,CMF_AIMDIRECTION,Owner.Pitch-16.0); }
			Else If(counter == 25) { Owner.A_SpawnProjectile("Dynamite_Thrown_25",32,0,0,CMF_AIMDIRECTION,Owner.Pitch-16.0); }
			Else If(counter == 20) { Owner.A_SpawnProjectile("Dynamite_Thrown_20",32,0,0,CMF_AIMDIRECTION,Owner.Pitch-16.0); }
			Else If(counter == 15) { Owner.A_SpawnProjectile("Dynamite_Thrown_15",32,0,0,CMF_AIMDIRECTION,Owner.Pitch-16.0); }
			Else If(counter == 10) { Owner.A_SpawnProjectile("Dynamite_Thrown_10",32,0,0,CMF_AIMDIRECTION,Owner.Pitch-16.0); }
			Else If(counter == 5) { Owner.A_SpawnProjectile("Dynamite_Thrown_5",32,0,0,CMF_AIMDIRECTION,Owner.Pitch-16.0); }

			Self.Amount --;
		}
		Return 0;
	}
	States
	{
	Spawn:
		TNT_ A -1;
		Stop;
	}
}

Class AmmoGranate : Ammo
{
	mixin AmmoPickupMessage;
	bool shgmod;
	Default
	{
		Tag "$TAG_AMMO_GRANATE";
		Inventory.Icon "SHG_A0";
		Inventory.Amount 1;
		Inventory.MaxAmount 10;
		Ammo.BackpackAmount 0;
		Ammo.BackpackMaxAmount 15;
		Ammo.DropAmount 1;
	}
	Override Void PostBeginPlay()
	{
		shgmod = False;
		Super.PostBeginPlay();
		bSPRITEFLIP = Random(0,1);
		SetState(ResolveState("Spawn")+Random[AmmoGranate](1,2));
	}
    Override void DoEffect()
    {
        Super.DoEffect();
        If(Owner is "PlayerPawn" && Owner.GetPlayerInput(MODINPUT_BUTTONS) & BT_USER1)
        {
			If(shgmod == True) { shgmod = False; }
			Else { shgmod = True; }
		}
    }
	Override Bool Use(bool pickup)
	{
		If(Owner && Self.Amount > 0)
		{
			If(shgmod == True && Self.Amount >= 5) { Owner.A_SpawnProjectile("Granate_Thrown_B",32,0,0,CMF_AIMDIRECTION,Owner.Pitch-16.0); Self.Amount -= 5; }
			Else { Owner.A_SpawnProjectile("Granate_Thrown_A",32,0,0,CMF_AIMDIRECTION,Owner.Pitch-16.0); Self.Amount --; }
		}
		Return 0;
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay;
		SHG_ AB -1;
		Stop;
	}
}

Class AmmoPouches : BackpackItem
{
	Default	{ Inventory.PickupMessage "$PICKUP_AMMO_POUCHES"; }
	Override Void PostBeginPlay()
	{
		Super.PostBeginPlay();
		For(int i; i<4; i++) { A_SpawnItemEx("AmmoGranate",Random(-8,8),Random(-8,8),failchance: 128); }
		For(int i; i<1; i++) { A_SpawnItemEx("AmmoTNT",Random(-8,8),Random(-8,8),failchance: 192); }
	}
	States
	{
	Spawn:
		AMM0 A -1;
		Stop;
	}
}

Class RocketAmmoReplacer : Actor
{
	Override Void PostBeginPlay()
	{
		Super.PostBeginPlay();
		For(int i; i<1; i++)
		{
			A_SpawnItemEx("Ammo792M_1");
			A_SpawnItemEx("AmmoRifleGrenade",Random(-8,8),Random(-8,8),failchance: 128);
			A_SpawnItemEx("AmmoGranate",Random(-8,8),Random(-8,8),failchance: 192);
		}
	}
}
Class RocketBoxReplacer : Actor
{
	Override Void PostBeginPlay()
	{
		Super.PostBeginPlay();
		For(int i; i<1; i++) { A_SpawnItemEx("Ammo792M_2"); }
		For(int i; i<3; i++)
		{
			If (random(0,2) == 0) { A_SpawnItemEx("AmmoRifleGrenade",Random(-8,8),Random(-8,8),failchance: 128); }
			Else If (random(0,2) == 1) { A_SpawnItemEx("AmmoGranate",Random(-8,8),Random(-8,8),failchance: 192); }
			Else If (random(0,2) == 2) { A_SpawnItemEx("AmmoTNT",Random(-8,8),Random(-8,8),failchance: 192); }
		}
	}
}
